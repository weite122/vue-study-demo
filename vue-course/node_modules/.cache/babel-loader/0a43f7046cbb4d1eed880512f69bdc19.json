{"remainingRequest":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/vue-router/node_modules/babel-loader/lib/index.js!/home/weite122/Desktop/Project/vue-study-demo/vue-course/vue-router/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/weite122/Desktop/Project/vue-study-demo/vue-course/vue-router/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/weite122/Desktop/Project/vue-study-demo/vue-course/vue-router/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/vue-router/src/views/Home.vue","mtime":1563430183381},{"path":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/vue-router/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/vue-router/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/vue-router/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/vue-router/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue';\nexport default {\n  name: 'home',\n  components: {\n    HelloWorld: HelloWorld\n  },\n  props: {\n    food: {\n      type: String,\n      default: 'apple'\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next();\n  },\n  // beforeRouteLeave (to, from, next) {\n  //   const leave = confirm('你确定要离开么？')\n  //   if (leave) next()\n  //   else next(false)\n  // },\n  beforeRouteUpdate: function beforeRouteUpdate(to, from, next) {// 在当前路由改变，但是该组件被复用时调用\n    // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，\n    // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。\n    // 可以访问组件实例 `this`\n  },\n  methods: {\n    handleClick: function handleClick(type) {\n      if (type === 'back') {\n        this.$router.back();\n      } else if (type === 'push') {\n        this.$router.push({\n          name: 'argu',\n          params: {\n            name: 'weite' // query: {\n            //   name: 'weite'\n            // }\n\n          }\n        });\n      } else if (type === 'replace') {\n        this.$router.replace({\n          name: 'parent'\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA,OAAA,UAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GALA;AAWA,EAAA,gBAXA,4BAWA,EAXA,EAWA,IAXA,EAWA,IAXA,EAWA;AACA,IAAA,IAAA;AAKA,GAjBA;AAkBA;AACA;AACA;AACA;AACA;AACA,EAAA,iBAvBA,6BAuBA,EAvBA,EAuBA,IAvBA,EAuBA,IAvBA,EAuBA,CACA;AACA;AACA;AACA;AACA,GA5BA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,IADA,EACA;AACA,UAAA,IAAA,KAAA,MAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA;AACA,OAFA,MAEA,IAAA,IAAA,KAAA,MAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,MADA;AAEA,UAAA,MAAA,EAAA;AACA,YAAA,IAAA,EAAA,OADA,CAGA;AACA;AACA;;AALA;AAFA,SAAA;AASA,OAVA,MAUA,IAAA,IAAA,KAAA,SAAA,EAAA;AACA,aAAA,OAAA,CAAA,OAAA,CAAA;AACA,UAAA,IAAA,EAAA;AADA,SAAA;AAGA;AACA;AAnBA;AA7BA,CAAA","sourcesContent":["<template>\n  <div class=\"home\">\n    <b>{{ food }}</b>\n    <button @click=\"handleClick('back')\">返回上一页</button>\n    <button @click=\"handleClick('push')\">跳转到parent</button>\n    <button @click=\"handleClick('replace')\">替换到parent</button>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue'\n\nexport default {\n  name: 'home',\n  components: {\n    HelloWorld\n  },\n  props: {\n    food: {\n      type: String,\n      default: 'apple'\n    }\n  },\n  beforeRouteEnter (to, from, next) {\n    next(\n    //   vm => {\n    //   console.log(vm)\n    // }\n    )\n  },\n  // beforeRouteLeave (to, from, next) {\n  //   const leave = confirm('你确定要离开么？')\n  //   if (leave) next()\n  //   else next(false)\n  // },\n  beforeRouteUpdate (to, from, next) {\n    // 在当前路由改变，但是该组件被复用时调用\n    // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，\n    // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。\n    // 可以访问组件实例 `this`\n  },\n  methods: {\n    handleClick(type) {\n      if (type === 'back') {\n        this.$router.back()\n      } else if (type === 'push') {\n        this.$router.push({\n          name: 'argu',\n          params: {\n            name: 'weite'\n          }\n          // query: {\n          //   name: 'weite'\n          // }\n        })\n      } else if (type === 'replace') {\n        this.$router.replace({\n          name: 'parent'\n        })\n      }\n    }\n  }\n\n}\n</script>\n"],"sourceRoot":"src/views"}]}