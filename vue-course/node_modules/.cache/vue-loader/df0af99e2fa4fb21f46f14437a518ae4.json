{"remainingRequest":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/weite122/Desktop/Project/vue-study-demo/vue-course/src/components/count-to/count-to.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/src/components/count-to/count-to.vue","mtime":1565155212373},{"path":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/node_modules/cache-loader/dist/cjs.js","mtime":1563592400530},{"path":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/node_modules/babel-loader/lib/index.js","mtime":1563592400482},{"path":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/node_modules/cache-loader/dist/cjs.js","mtime":1563592400530},{"path":"/home/weite122/Desktop/Project/vue-study-demo/vue-course/node_modules/vue-loader/lib/index.js","mtime":1563592402358}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport CountUp from \"countup\";\nexport default {\n  name: \"CountTo\",\n  computed: {\n    elementId() {\n      return `count_up_${this._uid}`;\n    }\n  },\n  data() {\n    return {\n      counter: {}\n    };\n  },\n  props: {\n    delay: {\n      type: Number,\n      default: 0\n    },\n    startVal: {\n      type: Number,\n      default: 0\n    },\n    endVal: {\n      type: Number,\n      required: true\n    },\n    decimals: {\n      type: Number,\n      default: 0\n    },\n    duration: {\n      type: Number,\n      default: 1\n    },\n    useEasing: {\n      type: Boolean,\n      default: false\n    },\n    useGrouping: {\n      type: Boolean,\n      default: true\n    },\n    separator: {\n      type: String,\n      default: \"\"\n    },\n    decimal: {\n      type: String,\n      default: \".\"\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n        this.counter = new Countup(\n        \"this.elementId\",\n        this.startVal,\n        this.endVal,\n        this.decimals,\n        this.duration,\n        {\n          useEasing: this.useEasing,\n          useGrouping: this.useGrouping,\n          separator: this.separator,\n          decimal: this.decimal\n        }\n      );\n      setTimeout(() => {\n        this.counter.start();\n      }, this.delay);\n    });\n  }\n};\n",{"version":3,"sources":["count-to.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"count-to.vue","sourceRoot":"src/components/count-to","sourcesContent":["<template>\n  <div>\n    <span :id=\"elementId\"></span>\n  </div>\n</template>\n\n<script>\nimport CountUp from \"countup\";\nexport default {\n  name: \"CountTo\",\n  computed: {\n    elementId() {\n      return `count_up_${this._uid}`;\n    }\n  },\n  data() {\n    return {\n      counter: {}\n    };\n  },\n  props: {\n    delay: {\n      type: Number,\n      default: 0\n    },\n    startVal: {\n      type: Number,\n      default: 0\n    },\n    endVal: {\n      type: Number,\n      required: true\n    },\n    decimals: {\n      type: Number,\n      default: 0\n    },\n    duration: {\n      type: Number,\n      default: 1\n    },\n    useEasing: {\n      type: Boolean,\n      default: false\n    },\n    useGrouping: {\n      type: Boolean,\n      default: true\n    },\n    separator: {\n      type: String,\n      default: \"\"\n    },\n    decimal: {\n      type: String,\n      default: \".\"\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n        this.counter = new Countup(\n        \"this.elementId\",\n        this.startVal,\n        this.endVal,\n        this.decimals,\n        this.duration,\n        {\n          useEasing: this.useEasing,\n          useGrouping: this.useGrouping,\n          separator: this.separator,\n          decimal: this.decimal\n        }\n      );\n      setTimeout(() => {\n        this.counter.start();\n      }, this.delay);\n    });\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"]}]}